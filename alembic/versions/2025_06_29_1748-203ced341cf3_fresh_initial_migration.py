"""fresh_initial_migration

Revision ID: 203ced341cf3
Revises: 
Create Date: 2025-06-29 17:48:46.918277

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '203ced341cf3'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('picture_url', sa.String(length=500), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('bots',
    sa.Column('bot_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('source_ids', sa.ARRAY(sa.UUID()), nullable=False),
    sa.Column('created_by_user_id', sa.UUID(), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('allowed_user_ids', sa.ARRAY(sa.UUID()), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('bot_id')
    )
    op.create_table('conversations',
    sa.Column('conversation_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('conversation_id')
    )
    op.create_table('user_agent_tokens',
    sa.Column('token_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('token_hash', sa.String(length=128), nullable=False),
    sa.Column('token_prefix', sa.String(length=8), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('last_used_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('token_id')
    )
    op.create_index(op.f('ix_user_agent_tokens_token_hash'), 'user_agent_tokens', ['token_hash'], unique=True)
    op.create_table('messages',
    sa.Column('message_id', sa.UUID(), nullable=False),
    sa.Column('conversation_id', sa.UUID(), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('llm_provider', sa.String(length=100), nullable=True),
    sa.Column('llm_model', sa.String(length=200), nullable=True),
    sa.Column('tools_used', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('citations', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('selected_bots', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.conversation_id'], ),
    sa.PrimaryKeyConstraint('message_id')
    )
    op.create_table('sources',
    sa.Column('source_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('instructions', sa.Text(), nullable=True),
    sa.Column('server_url', sa.String(length=500), nullable=False),
    sa.Column('auth_headers', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('tools_last_cached_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('tools_cache_status', sa.String(length=50), nullable=False),
    sa.Column('tools_cache_error', sa.Text(), nullable=True),
    sa.Column('owner_user_id', sa.UUID(), nullable=True),
    sa.Column('owner_bot_id', sa.UUID(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['owner_bot_id'], ['bots.bot_id'], ),
    sa.ForeignKeyConstraint(['owner_user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('source_id')
    )
    op.create_table('user_bot_access',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('bot_id', sa.UUID(), nullable=False),
    sa.Column('granted_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['bot_id'], ['bots.bot_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('user_id', 'bot_id')
    )
    op.create_table('bot_source_associations',
    sa.Column('bot_id', sa.UUID(), nullable=False),
    sa.Column('source_id', sa.UUID(), nullable=False),
    sa.Column('custom_instructions', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['bot_id'], ['bots.bot_id'], ),
    sa.ForeignKeyConstraint(['source_id'], ['sources.source_id'], ),
    sa.PrimaryKeyConstraint('bot_id', 'source_id')
    )
    op.create_table('source_shares',
    sa.Column('source_id', sa.UUID(), nullable=False),
    sa.Column('shared_with_user_id', sa.UUID(), nullable=False),
    sa.Column('granted_by_user_id', sa.UUID(), nullable=False),
    sa.Column('granted_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['granted_by_user_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['shared_with_user_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['source_id'], ['sources.source_id'], ),
    sa.PrimaryKeyConstraint('source_id', 'shared_with_user_id')
    )
    op.create_table('source_tools',
    sa.Column('tool_id', sa.UUID(), nullable=False),
    sa.Column('source_id', sa.UUID(), nullable=False),
    sa.Column('tool_name', sa.String(length=255), nullable=False),
    sa.Column('tool_description', sa.Text(), nullable=True),
    sa.Column('tool_schema', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('last_refreshed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['source_id'], ['sources.source_id'], ),
    sa.PrimaryKeyConstraint('tool_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('source_tools')
    op.drop_table('source_shares')
    op.drop_table('bot_source_associations')
    op.drop_table('user_bot_access')
    op.drop_table('sources')
    op.drop_table('messages')
    op.drop_index(op.f('ix_user_agent_tokens_token_hash'), table_name='user_agent_tokens')
    op.drop_table('user_agent_tokens')
    op.drop_table('conversations')
    op.drop_table('bots')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ### 