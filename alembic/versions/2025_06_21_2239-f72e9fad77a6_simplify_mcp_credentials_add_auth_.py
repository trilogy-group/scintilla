"""simplify_mcp_credentials_add_auth_headers

Revision ID: f72e9fad77a6
Revises: bd44f3000ed8
Create Date: 2025-06-21 22:39:42.563290

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'f72e9fad77a6'
down_revision = 'bd44f3000ed8'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('mcp_credentials')
    op.add_column('sources', sa.Column('auth_headers', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.drop_column('sources', 'required_fields')
    op.drop_column('sources', 'server_type')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('sources', sa.Column('server_type', postgresql.ENUM('CUSTOM_SSE', 'DIRECT_SSE', 'WEBSOCKET', name='mcpservertype'), autoincrement=False, nullable=False))
    op.add_column('sources', sa.Column('required_fields', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=False))
    op.drop_column('sources', 'auth_headers')
    op.create_table('mcp_credentials',
    sa.Column('credential_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('source_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('credential_type', postgresql.ENUM('API_KEY_HEADER', 'BEARER_TOKEN', 'CUSTOM_HEADERS', name='credentialtype'), autoincrement=False, nullable=False),
    sa.Column('encrypted_value', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('field_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['source_id'], ['sources.source_id'], name=op.f('mcp_credentials_source_id_fkey')),
    sa.PrimaryKeyConstraint('credential_id', name=op.f('mcp_credentials_pkey'))
    )
    # ### end Alembic commands ### 