"""add_source_tools_table_for_caching

Revision ID: bd44f3000ed8
Revises: 48c3c7adba19
Create Date: 2025-06-19 16:29:44.124899

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'bd44f3000ed8'
down_revision = '48c3c7adba19'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('source_tools',
    sa.Column('tool_id', sa.UUID(), nullable=False),
    sa.Column('source_id', sa.UUID(), nullable=False),
    sa.Column('tool_name', sa.String(length=255), nullable=False),
    sa.Column('tool_description', sa.Text(), nullable=True),
    sa.Column('tool_schema', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('last_refreshed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['source_id'], ['sources.source_id'], ),
    sa.PrimaryKeyConstraint('tool_id')
    )
    op.drop_index(op.f('ix_mcp_tool_cache_cache_key'), table_name='mcp_tool_cache')
    op.drop_table('mcp_tool_cache')
    op.add_column('sources', sa.Column('tools_last_cached_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('sources', sa.Column('tools_cache_status', sa.String(length=50), nullable=True))
    op.add_column('sources', sa.Column('tools_cache_error', sa.Text(), nullable=True))
    
    # Update existing rows with default values
    op.execute("UPDATE sources SET tools_cache_status = 'pending' WHERE tools_cache_status IS NULL")
    
    # Now make the column NOT NULL
    op.alter_column('sources', 'tools_cache_status', nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('sources', 'tools_cache_error')
    op.drop_column('sources', 'tools_cache_status')
    op.drop_column('sources', 'tools_last_cached_at')
    op.create_table('mcp_tool_cache',
    sa.Column('cache_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('bot_source_ids', postgresql.ARRAY(sa.UUID()), autoincrement=False, nullable=True),
    sa.Column('tools_data', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('loaded_servers', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=False),
    sa.Column('tool_count', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('cache_key', sa.VARCHAR(length=500), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('last_refreshed_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name=op.f('mcp_tool_cache_user_id_fkey')),
    sa.PrimaryKeyConstraint('cache_id', name=op.f('mcp_tool_cache_pkey'))
    )
    op.create_index(op.f('ix_mcp_tool_cache_cache_key'), 'mcp_tool_cache', ['cache_key'], unique=True)
    op.drop_table('source_tools')
    # ### end Alembic commands ### 